@model IEnumerable<MVC_PROJECT_1278941.Models.Department>
@using X.PagedList
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common

<h2>Course List</h2>
<div class="d-flex justify-content-end mb-1">
    @Html.ActionLink("Create New", "Create", "Departments", new { }, new { @class = "btn btn-primary btn-sm" })
</div>
<div class=" col-6 d-flex mx-auto">
    <table class="table table-bordered ">
        <thead>
            <tr>
                <th>Department Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var m in Model)
            {
                <tr>
                    <td>@m.DepartmentName</td>
                    <td>
                        <a class="btn btn-outline-warning btn-sm" href="@Url.Action("Edit", new {id=m.DepartmentId})"><i class="bi bi-pencil"></i></a>
                        <button type="button" class="btn btn-outline-danger btn-sm del" data-pk="@m.DepartmentId"><i class="bi bi-trash"></i></button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="d-flex justify-content-end">

    @Html.PagedListPager((IPagedList)Model, pg => Url.Action("ModelsTable", "Departments", new { pg = pg }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
    {
        UlElementClasses = new string[] { "pagination", "pagination-sm" },
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
    },
    new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "placeholder" }))
</div>

